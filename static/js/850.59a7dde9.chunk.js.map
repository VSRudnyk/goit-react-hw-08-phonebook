{"version":3,"file":"static/js/850.59a7dde9.chunk.js","mappings":"kUAEaA,E,QAAYC,GAAAA,IAAH,yC,SCMP,SAASC,IAAgB,IAAD,MACrC,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACMC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAAaG,SAAS,wBAC5BC,MAAOJ,EAAAA,KAAaG,SAAS,qBAAqBC,MAAM,oBACxDC,SAAUL,EAAAA,KAEPG,SAAS,wBACTG,IAAI,EAAG,0CACPC,IAAI,GAAI,4CAGb,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYX,KALtBY,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WACaC,EAJf,EAIEC,UAAaD,OAYf,OACE,SAACpB,EAAD,WACE,SAACsB,EAAA,EAAD,CACEC,UAAW,EACXC,GAAI,CACFC,OAAQ,EACRC,MAAO,QAJX,UAOE,UAACC,EAAA,EAAD,CACEH,GAAI,CACFE,MAAO,QAETE,GAAI,EACJC,GAAI,EALN,WAOE,UAACC,EAAA,GAAD,YACE,UAACA,EAAA,GAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,WACE,SAACC,EAAA,GAAD,gBACEzB,UAAQ,EACR0B,GAAG,OACH3B,KAAK,OACL4B,MAAM,OACNC,WAAS,EACTZ,OAAO,SACHR,EAAS,SAPf,IAQEqB,QAAOlB,EAAOZ,SAEhB,SAAC+B,EAAA,EAAD,CAAYC,QAAQ,UAAUC,MAAM,gBAApC,mBACGrB,EAAOZ,YADV,aACG,EAAakC,cAIlB,UAACZ,EAAA,GAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,WACE,SAACC,EAAA,GAAD,gBACEzB,UAAQ,EACR0B,GAAG,QACH3B,KAAK,QACL4B,MAAM,QACNC,WAAS,EACTZ,OAAO,SACHR,EAAS,UAPf,IAQEqB,QAAOlB,EAAOV,UAEhB,SAAC6B,EAAA,EAAD,CAAYC,QAAQ,UAAUC,MAAM,gBAApC,mBACGrB,EAAOV,aADV,aACG,EAAcgC,cAGnB,UAACZ,EAAA,GAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,WACE,SAACC,EAAA,GAAD,gBACEzB,UAAQ,EACR0B,GAAG,WACH3B,KAAK,WACL4B,MAAM,WACNO,KAAK,WACLN,WAAS,EACTZ,OAAO,SACHR,EAAS,aARf,IASEqB,QAAOlB,EAAOT,aAEhB,SAAC4B,EAAA,EAAD,CAAYC,QAAQ,UAAUC,MAAM,gBAApC,mBACGrB,EAAOT,gBADV,aACG,EAAiB+B,iBAKxB,SAACf,EAAA,EAAD,CAAKiB,GAAI,EAAT,UACE,SAACC,EAAA,EAAD,CACEL,QAAQ,YACRC,MAAM,UACNK,QAAS5B,GA7EJ,SAAA6B,GACf3C,EAAa2C,GACb5B,EAAW,QACXA,EAAW,SACXA,EAAW,eAsEH","sources":["views/RegisterView/RegisterView.styled.js","views/RegisterView/RegisterView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 450px;\n`;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { TextField, Button, Typography, Paper, Box, Grid } from '@mui/material';\nimport { useRegisterMutation } from 'redux/authAPI';\nimport { Container } from './RegisterView.styled';\n\nexport default function RegisterView() {\n  const [registerUser] = useRegisterMutation();\n  const validationSchema = yup.object().shape({\n    name: yup.string().required('Fullname is required'),\n    email: yup.string().required('Email is required').email('Email is invalid'),\n    password: yup\n      .string()\n      .required('Password is required')\n      .min(6, 'Password must be at least 6 characters')\n      .max(40, 'Password must not exceed 40 characters'),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    resetField,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = data => {\n    registerUser(data);\n    resetField('name');\n    resetField('email');\n    resetField('password');\n  };\n\n  return (\n    <Container>\n      <Paper\n        elevation={3}\n        sx={{\n          margin: 3,\n          width: 'auto',\n        }}\n      >\n        <Box\n          sx={{\n            width: 'auto',\n          }}\n          px={3}\n          py={2}\n        >\n          <Grid>\n            <Grid item xs={5} sm={5}>\n              <TextField\n                required\n                id=\"name\"\n                name=\"name\"\n                label=\"Name\"\n                fullWidth\n                margin=\"dense\"\n                {...register('name')}\n                error={errors.name ? true : false}\n              />\n              <Typography variant=\"inherit\" color=\"textSecondary\">\n                {errors.name?.message}\n              </Typography>\n            </Grid>\n\n            <Grid item xs={5} sm={5}>\n              <TextField\n                required\n                id=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                fullWidth\n                margin=\"dense\"\n                {...register('email')}\n                error={errors.email ? true : false}\n              />\n              <Typography variant=\"inherit\" color=\"textSecondary\">\n                {errors.email?.message}\n              </Typography>\n            </Grid>\n            <Grid item xs={5} sm={5}>\n              <TextField\n                required\n                id=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                fullWidth\n                margin=\"dense\"\n                {...register('password')}\n                error={errors.password ? true : false}\n              />\n              <Typography variant=\"inherit\" color=\"textSecondary\">\n                {errors.password?.message}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Box mt={3}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSubmit(onSubmit)}\n            >\n              Register\n            </Button>\n          </Box>\n        </Box>\n      </Paper>\n    </Container>\n  );\n}\n"],"names":["Container","styled","RegisterView","useRegisterMutation","registerUser","validationSchema","yup","shape","name","required","email","password","min","max","useForm","resolver","yupResolver","register","handleSubmit","resetField","errors","formState","Paper","elevation","sx","margin","width","Box","px","py","Grid","item","xs","sm","TextField","id","label","fullWidth","error","Typography","variant","color","message","type","mt","Button","onClick","data"],"sourceRoot":""}