{"version":3,"file":"static/js/634.793429c7.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","views/ContactsView/ContactsView.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","views/ContactsView/ContactsView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 450px;\n`;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useAddContactMutation } from 'redux/myContactsSlice';\nimport { TextField, Button, Typography, Paper, Box, Grid } from '@mui/material';\nimport { Container } from './ContactForm.styled';\n\nexport const ContactForm = ({ addContact }) => {\n  const { isLoading } = useAddContactMutation();\n  const validationSchema = yup.object().shape({\n    name: yup.string().required(),\n    number: yup\n      .string()\n      .required('This field is Required')\n      .matches(\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n        'Phone number is not valid'\n      ),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    resetField,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = data => {\n    addContact(data);\n    resetField('name');\n    resetField('number');\n  };\n\n  return (\n    <Container>\n      <Paper\n        elevation={3}\n        sx={{\n          width: 'auto',\n        }}\n      >\n        <Box\n          sx={{\n            width: 'auto',\n          }}\n          px={3}\n          py={2}\n        >\n          <Grid>\n            <Grid item xs={5} sm={5}>\n              <TextField\n                required\n                id=\"name\"\n                name=\"name\"\n                label=\"Name\"\n                size=\"small\"\n                fullWidth\n                margin=\"dense\"\n                {...register('name')}\n                error={errors.name ? true : false}\n              />\n              <Typography variant=\"inherit\" color=\"textSecondary\">\n                {errors.name?.message}\n              </Typography>\n            </Grid>\n\n            <Grid item xs={5} sm={5}>\n              <TextField\n                required\n                id=\"number\"\n                name=\"number\"\n                label=\"Number\"\n                size=\"small\"\n                fullWidth\n                margin=\"dense\"\n                {...register('number')}\n                error={errors.number ? true : false}\n              />\n              <Typography variant=\"inherit\" color=\"textSecondary\">\n                {errors.number?.message}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Box mt={1}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSubmit(onSubmit)}\n              disabled={isLoading}\n              size=\"small\"\n            >\n              Add\n            </Button>\n          </Box>\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 25px;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 450px;\n`;\n","import PropTypes from 'prop-types';\nimport { TextField } from '@mui/material';\nimport { Container } from './Filter.styled';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <Container>\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Find contact by name\"\n        variant=\"outlined\"\n        onChange={onChange}\n        value={value}\n        autoComplete=\"off\"\n        size=\"small\"\n      />\n    </Container>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  border-radius: 4px;\n  width: 450px;\n  box-shadow: 0px 3px 3px -2px rgb(0 0 0 / 20%),\n    0px 3px 4px 0px rgb(0 0 0 / 14%), 0px 1px 8px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const List = styled.ul`\n  padding: 15px;\n`;\n","import styled from 'styled-components';\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: auto;\n  color: rgba(0, 0, 0, 0.87);\n  font-size: 20px;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Link = styled.a`\n  margin-right: 15px;\n  color: inherit;\n  text-decoration: none;\n`;\n","import { Button } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useDeleteContactMutation } from 'redux/myContactsSlice';\nimport { Item, Link, ContactWrapper } from './ContactListItem.styled';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [deleteContacts, { isLoading: isDeleting }] =\n    useDeleteContactMutation();\n\n  return (\n    <Item>\n      <p>{name}</p>\n      <ContactWrapper>\n        <Link href={`tel: ${number}`}>{number}</Link>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          startIcon={<DeleteIcon />}\n          onClick={() => deleteContacts(id)}\n          disabled={isDeleting}\n          size=\"small\"\n        >\n          Delete\n        </Button>\n      </ContactWrapper>\n    </Item>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { List, Container } from './ContactList.styled';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\n\nconst ContactList = ({ items }) => {\n  return (\n    <Container>\n      {items && (\n        <List>\n          {items.map(contact => (\n            <ContactListItem key={contact.id} {...contact} />\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n};\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import toast, { Toaster } from 'react-hot-toast';\nimport { InfinitySpin } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport { ContactForm } from 'components/ContactForm';\nimport { Container } from './ContactsView.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { useGetContactQuery } from 'redux/myContactsSlice';\nimport { useAddContactMutation } from 'redux/myContactsSlice';\nimport ContactList from 'components/ContactList';\n\nexport default function ContactsView() {\n  const [filter, setFilter] = useState('');\n  const { data: contacts } = useGetContactQuery();\n  const [addMyContact, { isLoading }] = useAddContactMutation();\n\n  const addContact = value => {\n    for (const contact of contacts) {\n      if (contact.name === value.name) {\n        toast.error(`${value.name} is already in contacts.`);\n        return;\n      }\n    }\n    addMyContact(value);\n    toast.success(`Contact ${value.name} has been added`);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    if (contacts) {\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <Container>\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        {isLoading ? (\n          <InfinitySpin color=\"grey\" />\n        ) : (\n          <ContactList items={visibleContacts} />\n        )}\n      </>\n\n      <Toaster />\n    </Container>\n  );\n}\n"],"names":["Container","styled","ContactForm","addContact","isLoading","useAddContactMutation","validationSchema","yup","shape","name","required","number","matches","useForm","resolver","yupResolver","register","handleSubmit","resetField","errors","formState","Paper","elevation","sx","width","Box","px","py","Grid","item","xs","sm","TextField","id","label","size","fullWidth","margin","error","Typography","variant","color","message","mt","Button","onClick","data","disabled","Filter","value","onChange","autoComplete","List","ContactWrapper","Item","Link","ContactListItem","useDeleteContactMutation","deleteContacts","isDeleting","href","startIcon","Delete","items","map","contact","ContactsView","useState","filter","setFilter","contacts","useGetContactQuery","addMyContact","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","toast","e","currentTarget"],"sourceRoot":""}