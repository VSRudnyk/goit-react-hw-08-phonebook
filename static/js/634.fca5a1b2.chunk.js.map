{"version":3,"file":"static/js/634.fca5a1b2.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","views/ContactsView/ContactsView.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","views/ContactsView/ContactsView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 450px;\n`;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n// import { Form, Input, Submit, ErrorMessage } from './ContactForm.styled';\nimport { useAddContactMutation } from 'redux/myContactsSlice';\nimport { TextField, Button, Typography, Paper, Box, Grid } from '@mui/material';\nimport { Container } from './ContactForm.styled';\n\n// const schema = yup.object().shape({\n// name: yup.string().required(),\n// number: yup\n//   .string()\n//   .required('This field is Required')\n//   .matches(\n//     /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n//     'Phone number is not valid'\n//   ),\n// });\n\nexport const ContactForm = ({ addContact }) => {\n  const { isLoading } = useAddContactMutation();\n  const validationSchema = yup.object().shape({\n    name: yup.string().required(),\n    number: yup\n      .string()\n      .required('This field is Required')\n      .matches(\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n        'Phone number is not valid'\n      ),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    resetField,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = data => {\n    addContact(data);\n    resetField('name');\n    resetField('number');\n  };\n\n  return (\n    <Container>\n      <Paper\n        elevation={3}\n        sx={{\n          width: 'auto',\n        }}\n      >\n        <Box\n          sx={{\n            width: 'auto',\n          }}\n          px={3}\n          py={2}\n        >\n          <Grid>\n            <Grid item xs={5} sm={5}>\n              <TextField\n                required\n                id=\"name\"\n                name=\"name\"\n                label=\"Name\"\n                fullWidth\n                margin=\"dense\"\n                {...register('name')}\n                error={errors.name ? true : false}\n              />\n              <Typography variant=\"inherit\" color=\"textSecondary\">\n                {errors.name?.message}\n              </Typography>\n            </Grid>\n\n            <Grid item xs={5} sm={5}>\n              <TextField\n                required\n                id=\"number\"\n                name=\"number\"\n                label=\"Number\"\n                fullWidth\n                margin=\"dense\"\n                {...register('number')}\n                error={errors.number ? true : false}\n              />\n              <Typography variant=\"inherit\" color=\"textSecondary\">\n                {errors.number?.message}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Box mt={3}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSubmit(onSubmit)}\n              disabled={isLoading}\n            >\n              Add\n            </Button>\n          </Box>\n        </Box>\n      </Paper>\n    </Container>\n  );\n\n  // const {\n  //   register,\n  //   handleSubmit,\n  //   resetField,\n  //   formState: { errors },\n  // } = useForm({\n  //   resolver: yupResolver(schema),\n  // });\n  // const { isLoading } = useAddContactMutation();\n\n  // const onSubmit = values => {\n  //   addContact(values);\n  //   resetField('name');\n  //   resetField('number');\n  // };\n\n  // return (\n  //   <Form onSubmit={handleSubmit(onSubmit)}>\n  //     <label htmlFor=\"name\">Name</label>\n  //     <Input type=\"text\" id=\"name\" name=\"name\" {...register('name')} />\n  //     <ErrorMessage>{errors.name?.message}</ErrorMessage>\n\n  //     <label htmlFor=\"number\">Number</label>\n  //     <Input type=\"tel\" name=\"number\" id=\"number\" {...register('number')} />\n  //     <ErrorMessage>{errors.number?.message}</ErrorMessage>\n  //     <Submit type=\"submit\" disabled={isLoading}>\n  //       Add contact\n  //     </Submit>\n  //   </Form>\n  // );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 25px;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport const Form = styled.form`\n  outline: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  padding: 15px;\n`;\n\nexport const Input = styled.input`\n  width: 150px;\n  margin-bottom: 15px;\n`;\n\nexport const Submit = styled.button`\n  width: 100px;\n`;\n\nexport const ErrorMessage = styled.p`\n  margin: 0;\n  color: red;\n  font-size: 12px;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 450px;\n`;\n","// import PropTypes from 'prop-types';\nimport { TextField } from '@mui/material';\nimport { Container } from './Filter.styled';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <Container>\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Find contact by name\"\n        variant=\"outlined\"\n        onChange={onChange}\n        value={value}\n        autoComplete=\"off\"\n      />\n      {/* <Input\n        type=\"text\"\n        id=\"filter\"\n        onChange={onChange}\n        value={value}\n        autoComplete=\"off\"\n      /> */}\n    </Container>\n  );\n};\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: 0;\n`;\n\nexport const Container = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 25px;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 500px;\n  font-size: 20px;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import { Item } from './ContactListItem.styled';\nimport { useDeleteContactMutation } from 'redux/myContactsSlice';\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [deleteContacts, { isLoading: isDeleting }] =\n    useDeleteContactMutation();\n\n  return (\n    <Item>\n      {name}: {number}\n      <button\n        type=\"button\"\n        disabled={isDeleting}\n        onClick={() => deleteContacts(id)}\n      >\n        {isDeleting && <RotatingLines width=\"10\" />} Delete\n      </button>\n    </Item>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { List, Container } from './ContactList.styled';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\n\nconst ContactList = ({ items }) => {\n  return (\n    <Container>\n      {items && (\n        <List>\n          {items.map(contact => (\n            <ContactListItem key={contact.id} {...contact} />\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n};\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import toast, { Toaster } from 'react-hot-toast';\nimport { InfinitySpin } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm';\nimport { Container } from './ContactsView.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { useGetContactQuery } from 'redux/myContactsSlice';\nimport { useAddContactMutation } from 'redux/myContactsSlice';\nimport ContactList from 'components/ContactList';\nimport authSelectors from 'redux/authSelectors';\nimport { Link } from 'react-router-dom';\n\nexport default function ContactsView() {\n  const [filter, setFilter] = useState('');\n  const { data: contacts } = useGetContactQuery();\n  const [addMyContact, { isLoading }] = useAddContactMutation();\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  const addContact = value => {\n    for (const contact of contacts) {\n      if (contact.name === value.name) {\n        toast.error(`${value.name} is already in contacts.`);\n        return;\n      }\n    }\n    addMyContact(value);\n    toast.success(`Contact ${value.name} has been added`);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    if (contacts) {\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n  const visibleContacts = getVisibleContacts();\n  return (\n    <Container>\n      {isLoggedIn ? (\n        <>\n          <h1>Phonebook</h1>\n          <ContactForm addContact={addContact} />\n\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={changeFilter} />\n          {isLoading ? (\n            <InfinitySpin color=\"grey\" />\n          ) : (\n            <ContactList items={visibleContacts} />\n          )}\n        </>\n      ) : (\n        <h1>\n          Please <Link to=\"login\">log in</Link>\n        </h1>\n      )}\n      <Toaster />\n    </Container>\n  );\n}\n"],"names":["Container","styled","ContactForm","addContact","isLoading","useAddContactMutation","validationSchema","yup","shape","name","required","number","matches","useForm","resolver","yupResolver","register","handleSubmit","resetField","errors","formState","Paper","elevation","sx","width","Box","px","py","Grid","item","xs","sm","TextField","id","label","fullWidth","margin","error","Typography","variant","color","message","mt","Button","onClick","data","disabled","Filter","value","onChange","autoComplete","List","Item","ContactListItem","useDeleteContactMutation","deleteContacts","isDeleting","type","items","map","contact","ContactsView","useState","filter","setFilter","contacts","useGetContactQuery","addMyContact","isLoggedIn","useSelector","authSelectors","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","toast","e","currentTarget","to"],"sourceRoot":""}